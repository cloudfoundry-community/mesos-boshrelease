#!/usr/bin/env bash

#
# Apache Mesos Master properties
#

# Directory to store the Apache Mesos Master configuration files
export MESOS_MASTER_CONF_DIR=${JOB_DIR}/config

# Directory to store the Apache Mesos Master log files
export MESOS_MASTER_LOG_DIR=${LOG_DIR}

# Directory to store the Apache Mesos Master process IDs
export MESOS_MASTER_PID_DIR=${RUN_DIR}

# Directory to store the Apache Mesos Master data files
export MESOS_MASTER_STORE_DIR=${STORE_DIR}

# Directory to store the Apache Mesos Master files
export MESOS_MASTER_WORK_DIR=${STORE_DIR}/master

# Apache Mesos Home directory
export MESOS_HOME=/var/vcap/packages/mesos

# IP Address advertized to reach this Mesos master
<% if p('mesos.master.advertize_ip') != '' %>
export MESOS_MASTER_ADVERTIZE_IP='--advertize_ip=<%=p('mesos.master.advertize_ip')%>'
<% end %>

<% if p('mesos.master.advertize_port') != '' %>
export MESOS_MASTER_ADVERTIZE_PORT='--advertize_port=<%=p('mesos.master.advertize_port')%>'
<% end %>

export MESOS_MASTER_AGENT_PING_TIMEOUT="<%=p('mesos.master.agent_ping_timeout')%>"

<% if p('mesos.master.agent_removal_rate_limit') != '' %>
export MESOS_MASTER_AGENT_REMOVAL_RATE_LIMIT="--agent_removal_rate_limit=<%=p('mesos.master.agent_removal_rate_limit')%>"
<% end %>

export MESOS_MASTER_AGENT_REREGISTER_TIMEOUT="<%=p('mesos.master.agent_reregister_timeout')%>"

export MESOS_MASTER_ALLOCATOR="<%=p('mesos.master.allocator')%>"

# Amount of time to wait between performing (batch) allocations
export MESOS_MASTER_ALLOCATION_INTERVAL="<%= p('mesos.master.allocation_interval') %>"
<% if p('mesos.master.authenticate_agents') %>
export MESOS_MASTER_AUTHENTICATE_AGENTS="--authenticate_agents"
<% end %>

<% if p('mesos.master.authenticate_frameworks') %>
export MESOS_MASTER_AUTHENTICATE_FRAMEWORKS="--authenticate_frameworks"
<% end %>

<% if p('mesos.master.authenticate_http_frameworks') %>
export MESOS_MASTER_AUTHENTICATE_HTTP_FRAMEWORKS="--authenticate_http_frameworks"
<% end %>

<% if p('mesos.master.authenticate_http_readonly') %>
export MESOS_MASTER_AUTHENTICATE_HTTP_READONLY="--authenticate_http_readonly"
<% end %>

# <% if p('mesos.master.authenticate_http_readwrite') %>
export MESOS_MASTER_AUTHENTICATE_HTTP_READWRITE="--authenticate_http_readwrite"
<% end %>
#
# Authenticator implementation to use when authenticating frameworks and/or agents
export MESOS_MASTER_AUTHENTICATORS="<%= p('mesos.master.authenticators') %>"

# Authenticator implementation to use when authenticating frameworks and/or agents
export MESOS_MASTER_AUTHORIZERS="<%= p('mesos.master.authorizers') %>"

# Human readable name for the Apache Mesos cluster
export MESOS_CLUSTER_NAME="<%= p('mesos.cluster_name') %>"

<% if_p('mesos.principal', 'mesos.secret') do |principal, secret| %>
# File containing the list of credentials
export MESOS_MASTER_CREDENTIALS="--credentials=file://${MESOS_MASTER_CONF_DIR}/credentials"
<% end %>

export MESOS_MASTER_FAIR_SHARING_EXCLUDED_RESOURCE_NAMES="<%= p('mesos.master.fair_sharing_excluded_resource_names')%>"

export MESOS_MASTER_FIREWALL_RULES="<%= p('mesos.master.firewall_rules')%>"


# Policy to use for allocating resources between a given user's frameworks
export MESOS_MASTER_FRAMEWORK_SORTER="<%= p('mesos.master.framework_sorter') %>"

export MESOS_MASTER_HTTP_AUTHENTICATORS="<%= p('mesos.master.http_authenticators') %>"

export MESOS_MASTER_HTTP_FRAMEWORK_AUTHENTICATORS="<%= p('mesos.master.http_authenticators') %>"

# Whether to automatically initialize google logging of scheduler and/or executor drivers
export MESOS_MASTER_INITIALIZE_DRIVER_LOGGING="<%= p('mesos.master.initialize_driver_logging') %>"

export MESOS_MASTER_HOSTNAME="<%= spec.address %>"

export MESOS_MASTER_IP="<%= spec.address %>"

# Whether to automatically initialize the replicated log used for the registry
export MESOS_MASTER_LOG_AUTO_INITIALIZE="<%= p('mesos.master.log_auto_initialize') %>"

# How many seconds to buffer log messages for
export MESOS_MASTER_LOGBUFSECS="<%= p('mesos.master.logbufsecs') %>"

# Log message at or above this level
export MESOS_MASTER_LOGLEVEL="<%= p('mesos.master.loglevel') %>"

export MESOS_MASTER_MAX_AGENT_PING_TIMEOUTS="<%= p('mesos.master.max_agent_ping_timeouts') %>"

export MESOS_MASTER_MAX_COMPLETED_FRAMEWORKS="<%= p('mesos.master.max_completed_frameworks') %>"

export MESOS_MASTER_MAX_COMPLETED_TASKS_PER_FRAMEWORK="<%= p('mesos.master.max_completed_tasks_per_framework') %>"

# Duration of time before an offer is rescinded from a framework
export MESOS_MASTER_OFFER_TIMEOUT="<%= p('mesos.master.offer_timeout') %>"

# Port where Apache Mesos Master will listen on
export MESOS_MASTER_PORT="<%= p('mesos.master.port') %>"

# The size of the quorum of replicas when using 'replicated_log' based registry
export MESOS_MASTER_QUORUM="<%= p('mesos.master.quorum') %>"

# For failovers, limit on the percentage of agents that can be removed from the registry *and* shutdown after the re-registration timeout elapses
export MESOS_MASTER_RECOVERY_AGENT_REMOVAL_LIMIT="<%= p('mesos.master.recovery_agent_removal_limit') %>"

# Persistence strategy for the registry
export MESOS_MASTER_REGISTRY="<%= p('mesos.master.registry') %>"

# Duration of time to wait in order to fetch data from the registry
export MESOS_MASTER_REGISTRY_FETCH_TIMEOUT="<%= p('mesos.master.registry_fetch_timeout') %>"

# Duration of time to wait in order to store data in the registry
export MESOS_MASTER_REGISTRY_STORE_TIMEOUT="<%= p('mesos.master.registry_store_timeout') %>"

# Can root submit frameworks?
export MESOS_MASTER_ROOT_SUBMISSIONS="<%= p('mesos.master.root_submissions') %>"

# Policy to use for allocating resources between users
export MESOS_MASTER_USER_SORTER="<%= p('mesos.master.user_sorter') %>"

<% if p('mesos.master.agents_whitelist', []).any? %>
# File containing the list of agents to advertise offers for
export MESOS_MASTER_AGENTS_WHITELIST="--whitelist=file://${MESOS_MASTER_CONF_DIR}/agents_whitelist.cfg"
<% end %>

# ZooKeeper session timeout
export MESOS_MASTER_ZK_SESSION_TIMEOUT="<%= p('mesos.master.zk_session_timeout') %>"

# SASL plugins
export SASL_PATH=/var/vcap/packages/sasl/lib/sasl2/

